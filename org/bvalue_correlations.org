#+TITLE:  Neanderthal ancestry vs conservation in single individuals
#+AUTHOR: Martin Petr
#+EMAIL:  mp@bodkan.net
#+PROPERTY: session nea_vs_cons

All annotations where obtained using the [[http://cadd.gs.washington.edu/][CADD]] online service (table of
individual annotations is [[http://cadd.gs.washington.edu/static/ReleaseNotes_CADD_v1.3.pdf][here]]).

#+BEGIN_SRC R :session :results output silent
  library(tidyverse)
  library(stringr)
  library(magrittr)
  library(modelr)
  library(broom)

  source("R/utils.R")
#+END_SRC

#+BEGIN_SRC R :session :results output silent
  all_snps <- load_dataset("clean_data/ice_age.tsv",
                           "clean_data/sgdp.tsv",
                           "clean_data/archaics.tsv",
                           "clean_data/annotations.tsv",
                           filter_damage=TRUE,
                           metadata_path="raw_data/10_24_2014_SGDP_metainformation_update.txt")

  sgdp_info <-
      load_sgdp_info("raw_data/10_24_2014_SGDP_metainformation_update.txt") %>%
      mutate(name=str_replace(name, "^S_", "")) %>%
      filter(name %in% colnames(all_snps)) %>%
      mutate(age=0) %>%
      rename(pop=Region) %>%
      filter(!(pop == "Oceania" & Country != "PapuaNewGuinea")) %>%
      mutate(pop=ifelse(pop == "Oceania", "Papuan", pop))

  emh_info <-
      read_delim("clean_data/ages.txt", delim=" ") %>%
      mutate(pop="EMH") %>%
      filter(name %in% colnames(all_snps),
             ! name %in% c("Continenza", "Kostenki12", "Ostuni2",
                           "Pavlov1", "Vestonice15", "Vestonice43",
                           "Vestonice13", "Oase1", "Muierii2",
                           "AfontovaGora2"))

  samples_info <-
      bind_rows(emh_info, sgdp_info) %>%
      mutate(post_admixture=55000 - age,
             name=factor(name, levels=name),
             pop=as.factor(pop))

#+END_SRC

** Dividing SNPs into bins

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/projects/slim-neanderthal/org/img/bvalue_bins1.png :width 1200 :height 800
  # B values
  n_bins <- 10
  cutoffs <- quantile(all_snps$bStatistic,
                 prob=seq(0, 1, length.out=n_bins + 1),
                 na.rm=TRUE)
  snps <- mutate(all_snps,
                 bin=findInterval(bStatistic, vec=cutoffs,
                                  rightmost.closed=TRUE))

  qplot(snps$bStatistic, bins=100) + geom_vline(xintercept=cutoffs)
#+END_SRC

#+RESULTS:
[[file:~/projects/slim-neanderthal/org/img/bvalue_bins1.png]]

** Calculate Nea% in each bin in each sample. Store results in a long format.

#+BEGIN_SRC R :session :results output silent
    calc_nea_in_bins <- function(snps, n_bins, sample_name) {
        sapply(seq_len(n_bins), function(i) {
            calc_sharing_prop(filter(snps, bin == i), "archaic_Altai", sample_name)
        }) %>% as_tibble %>% mutate(bin=as.factor(seq_len(n_bins))) %>% rename(nea=value)
    }

    nea_bins <- samples_info %>%
        mutate(bins=purrr::map(as.character(name), function(n) { calc_nea_in_bins(snps, n_bins, n)}))
#+END_SRC

** Plots of B value linear regression lines

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/projects/slim-neanderthal/org/img/bvalue_corr.pdf :width 8 :height 6
  # boxplots of Nea% per bin in each population
  unnest(nea_bins, bins) %>% filter(pop != "Africa") %>%
      {
          ggplot(., aes(bin, nea, fill=pop, group=bin)) +
              geom_boxplot() +
              geom_point(alpha=1/2, size=0.5) +
              geom_smooth(method="lm", se=FALSE, color="black", aes(group=pop)) +
              coord_cartesian(ylim=c(0, 0.05)) +
              ggtitle(paste("Correlation of Nea% vs bin ")) +
              theme(legend.position="none") +
              facet_grid(. ~ pop)
      } %>% print

  # line plots of Nea% in bins per population
  for (pop_id in unique(samples_info$pop)) {
      unnest(nea_bins, bins) %>% filter(pop == pop_id) %>%
          {
              ggplot(., aes(bin, nea, color=name)) +
                  geom_line(aes(group=name), alpha=1/2) +
                  geom_smooth(aes(group=pop), method="lm", se=FALSE, color="black") +
                  coord_cartesian(ylim=c(0, 0.05)) +
                  ggtitle(paste("Correlation of Nea% vs bin ",
                                "(", pop_id, ")")) +
                  theme(legend.position="none")
          } %>% print
  }

  # each linear regression separately for each individual
  for (pop_id in unique(samples_info$pop)) {
      unnest(nea_bins, bins) %>% filter(pop == pop_id) %>%
          {
              ggplot(., aes(bin, nea, color=name, group=name)) +
                  geom_point() +
                  geom_smooth(method="lm", se=FALSE, color="black", size=0.5) +
                  coord_cartesian(ylim=c(0, 0.05)) +
                  ggtitle(paste("Correlation of Nea% vs bin ",
                                "(", pop_id, ")")) +
                  theme(legend.position="none") +
                  facet_wrap(~ name)
          } %>% print
  }
#+END_SRC

#+RESULTS:
[[file:~/projects/slim-neanderthal/org/img/bvalue_corr.pdf]]

** Plots of B value linear regression metrics

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/projects/slim-neanderthal/org/img/bvaluecorr_metrics.pdf :width 8 :height 5
  nea_bin_lm <- function(df) {
      lm(nea ~ bin, data=mutate(df, bin=as.integer(bin)))
  }

  lm_per_sample <- nea_bins %>%
      unnest %>%
      filter(pop != "Africa") %>%
      group_by(name, pop, post_admixture) %>%
      nest %>%
      mutate(model=map(data, nea_bin_lm),
             glance=map(model, glance),
             tidy=map(model, tidy))

  # plot the p.value of each fit
  unnest(lm_per_sample, glance, .drop=TRUE) %>%
      ggplot(aes(name, p.value, color=pop)) +
      geom_point(alpha=0.8) +
      geom_hline(yintercept=0.05, alpha=1/5) +
      ggtitle("p-values of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=3),
            legend.position="bottom")

  # plot the slope in each sample
  unnest(lm_per_sample, tidy) %>%
      filter(term == "bin") %>%
      ggplot(aes(name, estimate, color=pop)) +
      geom_point() +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=3),
            legend.position="bottom")

  # plot the distribution of slopes in each pop
  unnest(lm_per_sample, tidy) %>%
      filter(term == "bin") %>%
      ggplot(aes(pop, estimate, fill=pop)) +
      geom_boxplot() +
      geom_jitter(alpha=1/2) +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1),
            legend.position="none")

  # plot the distribution of slopes in each pop (only those significant)
  unnest(lm_per_sample, tidy) %>%
      filter(term == "bin", p.value < 0.05) %>%
      ggplot(aes(pop, estimate, fill=pop)) +
      geom_boxplot() +
      geom_jitter(alpha=1/2) +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)",
              subtitle="only fits with p-value < 0.05") +
      theme(axis.text.x=element_text(angle=60, hjust=1),
            legend.position="none")

  # plot the slopes over time
  unnest(lm_per_sample, tidy) %>%
      filter(term == "bin", pop == "EMH" | pop == "WestEurasia") %>%
      ggplot(aes(post_admixture, estimate, colour=pop)) +
      geom_point() +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin) over time") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=7),
            legend.position="bottom") +
      xlim(0, 55000)

  # plot the R^2 in each sample
  unnest(lm_per_sample, glance, .drop=TRUE) %>%
      ggplot(aes(name, r.squared, colour=pop)) +
      geom_point() +
      ggtitle("R-squared of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=4),
            legend.position="bottom")

  # plot the distribution of R^2 in each pop
  unnest(lm_per_sample, glance, .drop=TRUE) %>%
      ggplot(aes(pop, r.squared, fill=pop)) +
      geom_boxplot() +
      geom_jitter(alpha=1/2) +
      ggtitle("R-squared of the linear fits (Nea% ~ B value bin)",
              subtitle="all fits") +
      theme(axis.text.x=element_text(angle=60, hjust=1),
            legend.position="none") +
      coord_cartesian(ylim=c(0, 1))
#+END_SRC

#+RESULTS:
[[file:~/projects/slim-neanderthal/org/img/bvaluecorr_metrics.pdf]]

