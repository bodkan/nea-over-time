#+TITLE:  Neanderthal ancestry vs conservation in single individuals
#+AUTHOR: Martin Petr
#+EMAIL:  mp@bodkan.net
#+DATE:

#+property: session nea_vs_cons

#+BEGIN_SRC R :session :results output silent
  library(tidyverse)
  library(stringr)
  library(magrittr)
  library(modelr)
  library(broom)

  source("R/utils.R")

  snps <- load_dataset("clean_data/ice_age.tsv",
                       "clean_data/sgdp.tsv",
                       "clean_data/archaics.tsv",
                       "clean_data/annotations.tsv") %>%
      remove_transitions

  sgdp_info <-
      load_sgdp_info() %>%
      mutate(name=str_replace(name, "^S_", "")) %>%
      filter(name %in% colnames(snps)) %>%
      mutate(age=0) %>%
      rename(pop=Region)

  emh_info <-
      read_delim("clean_data/ages.txt", delim=" ") %>%
      mutate(pop="EMH") %>%
      filter(name %in% colnames(snps),
             ! name %in% c("Continenza", "Kostenki12", "Ostuni2",
                           "Pavlov1", "Vestonice15", "Vestonice43",
                           "Vestonice13", "Oase1", "Muierii2",
                           "AfontovaGora2"))

  samples_info <-
      bind_rows(emh_info, sgdp_info) %>%
      mutate(post_admixture=55000 - age,
             name=factor(name, levels=name))
#+END_SRC

#+BEGIN_SRC R :session :results output silent
  # Get a vector of bin assignments
  n_bins <- 10
  qs <- quantile(snps$bStatistic,
                 prob=seq(0, 1, length.out=n_bins + 1),
                 na.rm=TRUE)
  snps$bin <- findInterval(snps$bStatistic, vec=qs, rightmost.closed=TRUE)
#+END_SRC

** Calculate Nea% in each bin in each sample. Store results in a long format.

#+BEGIN_SRC R :session :results output silent
    calc_nea_in_bins <- function(snps, n_bins, sample_name) {
        sapply(seq_len(n_bins), function(i) {
            calc_sharing_prop(filter(snps, bin == i), "archaic_Altai", sample_name)
        }) %>% as_tibble %>% mutate(bin=seq_len(n_bins)) %>% rename(nea=value) 
    }

    nea_df <- samples_info %>%
        mutate(nea_bins=map(as.character(name), function(n) { calc_nea_in_bins(snps, n_bins, n)})) %>%
        mutate(nea_est=sapply(as.character(name), function(n) { calc_sharing_prop(snps, "archaic_Altai", n)}))
#+END_SRC

** Plots of linear regression lines

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bvalue_corr.pdf :width 8 :height 8
  for (pop_id in unique(samples_info$pop)) {
      unnest(nea_df, nea_bins) %>% filter(pop == pop_id) %>%
          {
              ggplot(., aes(bin, nea, color=name)) +
                  geom_point() +
                  geom_smooth(method="lm", se=FALSE, color="black", size=0.5) +
                  coord_cartesian(ylim=c(0, 0.05)) +
                  ggtitle(paste("Correlation of Nea% vs bin ",
                                "(", pop_id, ")")) +
                  theme(legend.position="none") +
                  facet_wrap(~ name)
          } %>% print
  }

  for (pop_id in unique(samples_info$pop)) {
      unnest(nea_df, nea_bins) %>% filter(pop == pop_id) %>%
          {
              ggplot(., aes(bin, nea, color=name)) +
                  geom_line(alpha=1/2) +
                  geom_smooth(method="lm", se=FALSE, color="black") +
                  coord_cartesian(ylim=c(0, 0.05)) +
                  ggtitle(paste("Correlation of Nea% vs bin ",
                                "(", pop_id, ")")) +
                  theme(legend.position="bottom")
          } %>% print
  }

#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bvalue_corr.pdf]]

** Plots of linear regression metrics

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bvaluecorr_metrics.pdf :width 8 :height 5
  nea_bin_lm <- function(df) {
      lm(nea ~ bin, data=df)
  }

  bins_by_sample <- nea_df %>%
      unnest %>%
      filter(pop != "Africa") %>%
      group_by(name, pop, post_admixture) %>%
      nest %>%
      mutate(model=map(data, nea_bin_lm),
             glance=map(model, glance),
             tidy=map(model, tidy))

  # plot the p.value of each fit
  unnest(bins_by_sample, glance, .drop=TRUE) %>%
      ggplot(aes(name, p.value, colour=pop)) +
      geom_point(alpha=0.8) +
      geom_hline(yintercept=0.05, alpha=1/5) +
      ggtitle("p-values of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=3),
            legend.position="bottom")

  # plot the slope in each sample
  unnest(bins_by_sample, tidy) %>%
      filter(term == "bin") %>%
      ggplot(aes(name, estimate, colour=pop)) +
      geom_point() +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=3),
            legend.position="bottom")

  # plot the distribution of slopes in each pop
  unnest(bins_by_sample, tidy) %>%
      filter(term == "bin") %>%
      ggplot(aes(pop, estimate, fill=pop)) +
      geom_violin() +
      geom_jitter(alpha=1/2) +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1),
            legend.position="none")

  # plot the distribution of slopes in each pop (only those significant)
  unnest(bins_by_sample, tidy) %>%
      filter(term == "bin", p.value < 0.05) %>%
      ggplot(aes(pop, estimate, fill=pop)) +
      geom_violin() +
      geom_jitter(alpha=1/2) +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin)",
              subtitle="only fits with p-value < 0.05") +
      theme(axis.text.x=element_text(angle=60, hjust=1),
            legend.position="none")

  # plot the slopes over time
  unnest(bins_by_sample, tidy) %>%
      filter(term == "bin", pop == "EMH" | pop == "WestEurasia") %>%
      ggplot(aes(post_admixture, estimate, colour=pop)) +
      geom_point() +
      ggtitle("Slopes of the linear fits (Nea% ~ B value bin) over time") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=7),
            legend.position="bottom") +
      xlim(0, 55000)

  # plot the R^2 in each sample
  unnest(bins_by_sample, glance, .drop=TRUE) %>%
      ggplot(aes(name, r.squared, colour=pop)) +
      geom_point() +
      ggtitle("R-squared of the linear fits (Nea% ~ B value bin)") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=7),
            legend.position="bottom")

  # plot the distribution of R^2 in each pop
  unnest(bins_by_sample, glance, .drop=TRUE) %>%
      ggplot(aes(pop, r.squared, fill=pop)) +
      geom_violin() +
      geom_jitter(alpha=1/2) +
      ggtitle("R-squared of the linear fits (Nea% ~ B value bin)",
              subtitle="all fits") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=7),
            legend.position="none") +
      coord_cartesian(ylim=c(0, 1))


  # plot the distribution of R^2 in each pop (only significant fits)
  unnest(bins_by_sample, glance, .drop=TRUE) %>%
      filter(p.value < 0.05) %>%
      ggplot(aes(pop, r.squared, fill=pop)) +
      geom_violin() +
      geom_jitter(alpha=1/2) +
      ggtitle("R-squared of the linear fits (Nea% ~ B value bin)",
              subtitle="only fits with p < 0.05") +
      theme(axis.text.x=element_text(angle=60, hjust=1, size=7),
            legend.position="none") +
      coord_cartesian(ylim=c(0, 1))
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bvaluecorr_metrics.pdf]]

*8 Plots of geographic distribution of Nea% measures

#+BEGIN_SRC R :session :results output silent
  library(maps)
#+END_SRC

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/nea_maps.pdf :width 10 :height 6
  map_plot <-
      map_data("world") %>%
      ggplot() +
      geom_polygon(aes(x=long, y=lat, group=group), 
                   colour="light gray", fill="light gray")

  map_plot +
      geom_point(data=nea_df, 
                 aes(Longitude, Latitude, fill=nea_est, size=nea_est), pch=21, alpha=1/2)

  map_plot +
      geom_point(data=bins_by_sample %>% unnest(tidy) %>% filter(term == "bin", pop != "EMH") %>% inner_join(nea_df),
                 aes(Longitude, Latitude, size=estimate, fill=nea_est), pch=21, alpha=1/2)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/nea_maps.pdf]]

