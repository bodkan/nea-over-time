#+TITLE:  Analysis of Neanderthal ancestry using different annotation data
#+AUTHOR: Martin Petr
#+EMAIL:  mp@bodkan.net
#+DATE:

#+property: session cadd_annotations

All annotations where obtained using the [[http://cadd.gs.washington.edu/][CADD]] online service (table of
individual annotations is [[http://cadd.gs.washington.edu/static/ReleaseNotes_CADD_v1.3.pdf][here]]).

* Data processing

#+BEGIN_SRC R :session :results output silent
  library(tidyverse)
  library(stringr)

  source("R/utils.R")
#+END_SRC

Load the genotypes from all individuals and call random alleles for
humans with diploid calls

#+BEGIN_SRC R :session :results output silent
  merged <- load_dataset("clean_data/ice_age.tsv",
                         "clean_data/sgdp_subset.tsv",
                         "clean_data/archaics.tsv",
                         "clean_data/annotations.tsv")
#+END_SRC

Convert the annotations into a long format for easier plotting later
(split by population).

#+BEGIN_SRC R :session :results output silent
  # take a subset of all annotations and split them by population
  annotations <-
      select(merged, chrom, pos, isDerived, AnnoType, bStatistic,priPhCons, mamPhCons,
             verPhCons,  priPhyloP, mamPhyloP, verPhyloP, AnnoType,
             starts_with("TG")) %>%
      gather(key="pop", value="freq", -c(chrom, pos, isDerived, AnnoType,
                                         bStatistic, priPhCons,
                                         mamPhCons, verPhCons,
                                         priPhyloP, mamPhyloP,
                                         verPhyloP, AnnoType)) %>%
      mutate(pop=str_replace(pop, "TG_", "")) %>%
      filter(pop != "AF") %>%
      filter(complete.cases(.))
#+END_SRC

* Changes in the Neanderthal ancestry over time

#+RESULTS:

Load ages of all Upper-Paleolithic samples

#+BEGIN_SRC R :session :results output silent
  ages <-
      read_delim("clean_data/ages.txt", delim=" ") %>%
      bind_rows(tibble(name=c("S_French_1", "S_French_2", "S_Sardinian_1", "S_Sardinian_2"),
                       age=rep(0L, 4))) %>%
      mutate(post_admixture=as.integer(55000 - age))

  sample_names <- colnames(merged)[colnames(merged) %in% ages$name]
#+END_SRC

Calculate the proportion of alleles shared with a Altai/Vindija

#+BEGIN_SRC R :session :results output silent
  nea_ancestry_all <-
      tibble(
          name=sample_names, 
          nea=estimate_nea(merged, sample_names),
          missing=sapply(sample_names, function(s) { mean(merged[[s]] == 9) })
      ) %>%
      inner_join(ages, by="name") %>%
      arrange(post_admixture) %>%
      mutate(set="all")

  tv_only <- remove_transitions(merged)

  nea_ancestry_tv <-
      tibble(
          name=sample_names, 
          nea=estimate_nea(tv_only, sample_names),
          missing=sapply(sample_names, function(s) { mean(merged[[s]] == 9) })
      ) %>%
      inner_join(ages, by="name") %>%
      arrange(post_admixture) %>%
      mutate(set="filtered")

  nea_ancestry <- bind_rows(nea_ancestry_all, nea_ancestry_tv) %>%
      filter(name != "Oase1")
#+END_SRC

** Comparison of Nea% levels when using all sites vs C->T/G->A filtered sites

In the plots of Nea% over time, one could clearly see that
AfontovaGora3 and Villabruna (the two non-UDG treated samples) had the
highest Nea. ancestry levels, despite being fairly recent. This makes
me worried that this is some sort of artifact of the non-UDG
treatment. Higher rates of DNA damage in these samples could easily
lead to higher Nea. ancestry.

Lets plot Nea% estimates using all sites and using a subset of SNPs where we ignore
a site if it has ref. C and alt. T, or ref. G and alt A.

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/nea_all_vs_filtered.png :width 800 :height 500
  diffs <- nea_ancestry %>%
      group_by(name) %>%
      spread(set, nea) %>%
      mutate(difference=abs(all - filtered))
  diffs$name <- factor(diffs$name, levels=diffs$name[order(diffs$difference)])

  ggplot(diffs) +
      geom_point(aes(name, all, colour="all")) +
      geom_point(aes(name, filtered, colour="filtered")) +
      ylim(0, 0.1) +
      theme(axis.text.x=element_text(angle=60, hjust=1)) 
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/nea_all_vs_filtered.png]]

One can clearly see the difference when using these two different sets
of sites. As expected, the two non-UDG samples show a highest
difference between the two sets of sites, most likely reflecting the high
DNA damage rates in non-UDG data.

** Comparison of the proportions of missing sites in different samples

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/missing_data.png :width 800 :height 300
  missing_cutoff <- 0.98

  ggplot(nea_ancestry, aes(name, missing)) +
      geom_point() +
      geom_hline(yintercept=missing_cutoff) +
      theme(axis.text.x=element_text(angle=60, hjust=1)) 
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/missing_data.png]]

** Plot Nea% over time

*************** TODO look into weighted linear regression - weight by # of SNPs in each sample


#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/nea_vs_time_all_samples.png :width 800 :height 500
  ggplot(nea_ancestry) +
      geom_point(aes(post_admixture, nea)) +
      lims(y=c(0, 0.1), x=c(0, 55000)) +
      geom_smooth(aes(post_admixture, nea), method="lm", se=FALSE, data=nea_ancestry) +
      geom_smooth(aes(post_admixture, nea), alpha=0.2, color="red", method="lm", se=FALSE, data=filter(nea_ancestry, age > 10000)) +
      facet_grid(. ~ set)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/nea_vs_time_all_samples.png]]

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/nea_vs_time_filtered_missing.png :width 800 :height 500
  filter(nea_ancestry, missing < missing_cutoff) %>%
  ggplot() +
      geom_point(aes(post_admixture, nea)) +
      lims(y=c(0, 0.1), x=c(0, 55000)) +
      geom_smooth(aes(post_admixture, nea), method="lm", se=FALSE, data=nea_ancestry) +
      geom_smooth(aes(post_admixture, nea), alpha=0.2, color="red", method="lm", se=FALSE, data=filter(nea_ancestry, age > 10000)) +
      facet_grid(. ~ set)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/nea_vs_time_filtered_missing.png]]

*** linear regression - all sites

#+BEGIN_SRC R :session :results output :exports both
  lm_all <- lm(nea ~ post_admixture,
               data=filter(nea_ancestry, set == "all", missing < missing_cutoff))
  lm_old <- lm(nea ~ post_admixture,
               data=filter(nea_ancestry, set == "all", age > 10000, missing < missing_cutoff))

  print(summary(lm_all))
  print(summary(lm_old))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = nea ~ post_admixture, data = filter(nea_ancestry, 
    set == "all", missing < missing_cutoff))

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0050594 -0.0022561 -0.0004616  0.0016519  0.0082944 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)     3.654e-02  2.178e-03   16.77 9.29e-15 ***
post_admixture -3.013e-07  5.438e-08   -5.54 1.07e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.003542 on 24 degrees of freedom
Multiple R-squared:  0.5612,	Adjusted R-squared:  0.5429 
F-statistic: 30.69 on 1 and 24 DF,  p-value: 1.066e-05

Call:
lm(formula = nea ~ post_admixture, data = filter(nea_ancestry, 
    set == "all", age > 10000, missing < missing_cutoff))

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0061839 -0.0028016 -0.0001674  0.0019405  0.0068697 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)     3.331e-02  3.558e-03   9.364 3.83e-07 ***
post_admixture -1.734e-07  1.157e-07  -1.499    0.158    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.00428 on 13 degrees of freedom
Multiple R-squared:  0.1475,	Adjusted R-squared:  0.08187 
F-statistic: 2.248 on 1 and 13 DF,  p-value: 0.1576
#+end_example

*** linear regression - filtered sites

#+BEGIN_SRC R :session :results output :exports both
  lm_all <- lm(nea ~ post_admixture,
               data=filter(nea_ancestry, set == "filtered", missing < missing_cutoff))
  lm_old <- lm(nea ~ post_admixture,
               data=filter(nea_ancestry, set == "filtered", age > 10000, missing < missing_cutoff))

  print(summary(lm_all))
  print(summary(lm_old))
#+END_SRC

#+RESULTS:
#+begin_example

Call:
lm(formula = nea ~ post_admixture, data = filter(nea_ancestry, 
    set == "filtered", missing < missing_cutoff))

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0048988 -0.0015138  0.0000317  0.0016801  0.0041848 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)     3.008e-02  1.464e-03  20.549  < 2e-16 ***
post_admixture -2.205e-07  3.654e-08  -6.034 3.14e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.00238 on 24 degrees of freedom
Multiple R-squared:  0.6027,	Adjusted R-squared:  0.5861 
F-statistic: 36.41 on 1 and 24 DF,  p-value: 3.137e-06

Call:
lm(formula = nea ~ post_admixture, data = filter(nea_ancestry, 
    set == "filtered", age > 10000, missing < missing_cutoff))

Residuals:
       Min         1Q     Median         3Q        Max 
-0.0039501 -0.0014811 -0.0008538  0.0019028  0.0040931 

Coefficients:
                 Estimate Std. Error t value Pr(>|t|)    
(Intercept)     3.160e-02  2.129e-03  14.840 1.58e-09 ***
post_admixture -2.795e-07  6.923e-08  -4.038  0.00141 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.002562 on 13 degrees of freedom
Multiple R-squared:  0.5564,	Adjusted R-squared:  0.5223 
F-statistic: 16.31 on 1 and 13 DF,  p-value: 0.001407
#+end_example

* SFS of putatively introgressed alleles

What is the mean frequency of Nea. alleles?

#+BEGIN_SRC R :session :exports both
  group_by(annotations, pop) %>% summarise(mean(freq))
#+END_SRC

#+RESULTS:
| AFR | 0.0114981865936804 |
| AMR | 0.0464103690403668 |
| ASN |   0.06542436899169 |
| EUR | 0.0487045769988929 |

** Scatterplots

*** EUR vs ASN frequency

#+begin_src R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/imgscatterplot_freq_EURvsASN.png :width 600 :height 600
  spread(annotations, pop, freq) %>%
      ggplot(aes(EUR, ASN)) +
      geom_count(alpha=0.25) +
      geom_smooth(method="lm", se=FALSE) +
      lims(x=c(0, 1), y=c(0, 1))
#+end_src

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/scatterplot_freq_EURvsASN.png]]

*** EUR vs AMR frequency

#+begin_src R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/imgscatterplot_freq_EURvsAMR.png :width 600 :height 600
  spread(annotations, pop, freq) %>%
      ggplot(aes(EUR, AMR)) +
      geom_count(alpha=0.25) +
      geom_smooth(method="lm", se=FALSE) +
      lims(x=c(0, 1), y=c(0, 1))
#+end_src

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/scatterplot_freq_EURvsAMR.png]]

*** EUR vs AFR frequency

#+begin_src R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/scatterplot_freq_EURvsAFR.png :width 600 :height 600
  spread(annotations, pop, freq) %>%
      ggplot(aes(EUR, AFR)) +
      geom_count(alpha=0.25) +
      geom_smooth(method="lm", se=FALSE) +
      lims(x=c(0, 1), y=c(0, 1))
#+end_src

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/scatterplot_freq_EURvsAFR.png]]

*** all vs all

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/scatterplot_freq_matrix.png :width 600 :height 600
  spread(annotations, pop, freq) %>%
      select(AFR, EUR, ASN, AMR) %>%
      plot(pch=20, cex=1, xlim=c(0, 1), ylim=c(0, 1))
#+END_SRC

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/scatterplot_freq_matrix.png]]

** Density plots

*** EUR vs ASN

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/imgsfs_dens_EURvsASN.png :width 800 :height 500
  annotations %>%
      group_by(pop) %>%
      filter(pop %in% c("EUR", "ASN")) %>%
      sample_n(100000) %>%
      ggplot() +
      geom_density(aes(freq, fill=pop), alpha=0.5)
#+END_SRC

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/sfs_dens_EURvsASN.png]]

*** EUR vs AMR

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/imgsfs_dens_EURvsAMR.png :width 800 :height 500
  annotations %>%
      group_by(pop) %>%
      filter(pop %in% c("EUR", "AMR")) %>%
      sample_n(100000) %>%
      ggplot() +
      geom_density(aes(freq, fill=pop), alpha=0.5)
#+END_SRC

#+RESULTS:
[[file~/devel/slim-neanderthal/org/img/sfs_dens_EURvsAMR.png]]
    
* Nea. ancestry in different functional regions

** Binned by functional region

Counts of feature annotation

#+BEGIN_SRC R :session :results value
  raw_annotations %>%
      group_by(AnnoType, Consequence) %>%
      summarise(n()) %>%
      arrange(AnnoType)
#+END_SRC

#+RESULTS:
| CodingTranscript    | NON_SYNONYMOUS   |   2093 |
| CodingTranscript    | SPLICE_SITE      |     55 |
| CodingTranscript    | STOP_GAINED      |     16 |
| CodingTranscript    | STOP_LOST        |      2 |
| CodingTranscript    | SYNONYMOUS       |   2468 |
| Intergenic          | DOWNSTREAM       |  30988 |
| Intergenic          | INTERGENIC       | 160474 |
| Intergenic          | UPSTREAM         |  28561 |
| NonCodingTranscript | NONCODING_CHANGE |   4285 |
| NonCodingTranscript | SPLICE_SITE      |     40 |
| RegulatoryFeature   | REGULATORY       |  53426 |
| Transcript          | 3PRIME_UTR       |   2591 |
| Transcript          | 5PRIME_UTR       |    179 |
| Transcript          | CANONICAL_SPLICE |     32 |
| Transcript          | INTRONIC         | 196005 |
| Transcript          | SPLICE_SITE      |    415 |

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/func_regions.png :width 800 :height 500
  annotations %>%
      group_by(pop, AnnoType) %>%
      sample_n(1400) %>%
      ggplot(aes(AnnoType, freq, fill=AnnoType)) +
      geom_violin() +
      geom_jitter(alpha=0.2, size=0.3) +
      ylim(0, 0.05) +
      facet_grid(pop ~ .)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/func_regions.png]]

** B statistic analysis

Bin SNPs into N bins based on the B value deciles

#+BEGIN_SRC R :session :results output silent
  n_bins <- 10
#+END_SRC

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bstat_distr_bins1.png  :width 800 :height 300
  qs1 <- quantile(annotations$bStatistic, probs=seq(0, 1, 1 / n_bins),
                 na.rm=TRUE)

  binned1 <-
      annotations %>%
      mutate(bin=as.factor(findInterval(bStatistic, vec=qs1,
                                        rightmost.closed=TRUE))) %>%
      filter(complete.cases(.))

  qplot(binned1$bStatistic) + geom_vline(xintercept=qs1)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bstat_distr_bins1.png]]

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bstat_distr_bins2.png  :width 800 :height 300
  qs2 <- seq(0, 1000, 1000 / n_bins)

  binned2 <-
      annotations %>%
      mutate(bin=as.factor(findInterval(bStatistic, vec=qs2,
                                        rightmost.closed=TRUE))) %>%
      filter(complete.cases(.))

  qplot(binned2$bStatistic) + geom_vline(xintercept=qs2)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bstat_distr_bins2.png]]

*** B statistic vs frequency

#+BEGIN_SRC R :session :exports both
  group_by(annotations, pop) %>% summarise(mean(freq))
#+END_SRC

#+RESULTS:
| AFR | 0.0114981865936804 |
| AMR | 0.0464103690403668 |
| ASN |   0.06542436899169 |
| EUR | 0.0487045769988929 |

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bstat_vs_freq.png :width 800 :height 500
  annotations %>%
      filter(isDerived) %>%
      ggplot(aes(bStatistic, freq)) +
      geom_point(alpha=0.3) +
      geom_smooth(method="lm", se=FALSE) +
      ylim(0, 1) +
      geom_vline(xintercept=qs1, color="red") +
      facet_grid(pop ~ .)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bstat_vs_freq.png]]

It seems that Neanderthal alleles are, on average, at higher
frequencies towards higher B values, but is it really true? The linear
regression fit is saying the opposite - the mean Nea. allele frequency
is the same, regardless of the B value.

This isn't really surprising, I think. Suppose that the Neanderthal
introgression was around x% at the beginning and was effectively
neutral for a long period of time (low $N_e$ in early modern
humans). B values are essentially a measure of a conservation or drift
in a region. Introgressed alleles in conserved regions experienced low
drift (they would show low variance in frequency), introgressed
alleles in neutral regions experienced high drift (they would show
high variance in frequency). However, the expected frequency (i.e. the
mean) would stay the same at the initial value.

Am I correct that this is exacly what we see here?

Moreover, does it actually make sense to do the linear regression in
this way? Shouldn't we divide sites into bins based on their actual B
value? I.e. bins 0-99, 100-199, ..., 900-1000?

*** mean frequency in B statistic bin

#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bstatbin1_vs_freq.png :width 800 :height 500
  binned1 %>%
      ggplot() +
      geom_boxplot(aes(bin, freq, fill=bin, group=bin)) +
      coord_cartesian(ylim=c(0, 0.1)) +
      facet_grid(pop ~ .)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bstatbin1_vs_freq.png]]


#+BEGIN_SRC R :session :results output graphics :exports both :file ~/devel/slim-neanderthal/org/img/bstatbin2_vs_freq.png :width 800 :height 500
  binned2 %>%
      ggplot() +
      geom_boxplot(aes(bin, freq, fill=bin, group=bin)) +
      ylim(0, 0.2) +
      facet_grid(pop ~ .)
#+END_SRC

#+RESULTS:
[[file:~/devel/slim-neanderthal/org/img/bstatbin2_vs_freq.png]]

*************** TODO Analyze the variance 

** functional consequences of alleles that were completely removed

#+BEGIN_SRC R :session
  # select sites with the frequency of Neanderthal alleles is zero
  annotations %>%
      filter(pop == "EUR") %>%
      filter(freq == 0) %>%
      select(AnnoType)
#+END_SRC
