initialize() {
    initializeRecombinationRate($recomb_rates, $recomb_ends);
    initializeMutationRate($mut_rate);

    // deleterious mutation type
    initializeMutationType("m0", $dominance_coef, "g", -0.043, 0.23);

    // mutation type of neutral marker alleles at informative sites
    initializeMutationType("m1", 0.5, "f", 0.0);

    initializeGenomicElementType("g1", m0, 1.0);

    $genomic_elements

    // positions of the informative sites
    defineConstant("positions", $positions);
}

// create the population of AMH and Neanderthal ancestors
1 {
    sim.addSubpop("p1", $anc_size);
}

// split between AMH and Neanderthals after a period of burnin
$burnin {
    sim.addSubpopSplit("p2", $nea_size, p1);
}

// dump all populations and mutations at the end of the simulation
$out_of_africa {
    // split between non-Africans and Africans
    sim.addSubpopSplit("p3", $founder_size, p1);

    // place neutral markers on all Neanderthal haplotypes
    cat(time() + " :: Placing neutral Neanderthal markers ($output).\n");
    for (pos in positions) {
        p2.genomes.addNewDrawnMutation(m1, pos);
    }
}

$out_of_africa late() {
    sim.outputFull("$output");
    sim.simulationFinished();
}

1:$out_of_africa {
    if (sim.generation % 1000 == 1) {
       cat(time() + " :: Simulation of '$output' (" + sim.generation + "/$out_of_africa generations)\n");
    }
}
