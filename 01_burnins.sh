#!/bin/bash

mkdir data/burnins



# testing the effect of different amounts of potentially deleterious sequence
for region in exon protein_coding promoter utr3 tf_binding_site; do
for h in 0.0 0.5 1.0; do
    python3 code/run_mutation_accumulation.py \
        --regions data/slim_coords/${region}_regions.bed \
        --sites data/slim_coords/${region}_all_sites.bed \
        --recomb-map data/slim_coords/${region}_recomb_map.bed \
        --mut-rate 1e-8 \
        --dominance-coef $h \
        --output data/burnins/${region}_h_${h}.txt &
done
done



# testing the effect of different Neanderthal population sizes
region="exon"; h=0.5
for Ne in 100 500 10000; do
    python3 code/run_mutation_accumulation.py \
        --regions data/slim_coords/${region}_regions.bed \
        --sites data/slim_coords/${region}_all_sites.bed \
        --recomb-map data/slim_coords/${region}_recomb_map.bed \
        --nea-size $Ne \
        --mut-rate 1e-8 \
        --dominance-coef $h \
        --output data/burnins/nea_Ne_${Ne}_${region}_h_${h}.txt &
done
cp data/burnins/exon_h_0.5.txt data/burnins/nea_Ne_1000_exon_h_0.5.txt



# addressing reviewer's comment about different Neandertal ancestry
# levels in different regions of the genome - simulations with
# exonic sequence partitioned into different classes of increasing
# levels of dominance or deleteriousness of mutations
python3 code/bin_exons.py
region="exon"; h=0.5
# changing the s of deleterious mutations
python3 code/run_mutation_accumulation.py \
    --regions data/slim_coords/bin_s_${region}_regions.bed \
    --sites data/slim_coords/${region}_all_sites.bed \
    --recomb-map data/slim_coords/${region}_recomb_map.bed \
    --mut-rate 1e-8 \
    --output data/burnins/bin_s_${region}.txt &
# changing the h of deleterious mutations
python3 code/run_mutation_accumulation.py \
    --regions data/slim_coords/bin_h_${region}_regions.bed \
    --sites data/slim_coords/${region}_all_sites.bed \
    --recomb-map data/slim_coords/${region}_recomb_map.bed \
    --mut-rate 1e-8 \
    --output data/burnins/bin_h_${region}.txt &



# dominance mix burnins - this is using SLiM code generated by an older
# version of Python/SLiM templating framework - but because the overall
# results don't really change, it's OK to keep it this way (good enough
# for a supplementary figure)
for prop_add in `seq 0 0.1 1`; do
    prop_rec=`echo "1 $prop_add" | awk '{print $1 - $2}'`
    N="mix_${prop_add}_${prop_rec}"
    qsub -V -cwd -j y -l virtual_free=50G,h_vmem=50G -N $N -o tmp/${N}.txt \
        ./code/run_slim.sh "-d prop_add=$prop_add -d prop_rec=$prop_rec code/slim/dominance_mix__mut_accum.slim"
done



# uniform recombination rate test
for region in exon protein_coding promoter utr3 tf_binding_site; do
for h in 0.5; do
    python3 code/run_mutation_accumulation.py \
        --regions data/slim_coords/${region}_regions.bed \
        --sites data/slim_coords/${region}_all_sites.bed \
        --recomb-map data/slim_coords/uniform_${region}_recomb_map.bed \
        --mut-rate 1e-8 \
        --dominance-coef $h \
        --output data/burnins/uniform_${region}_h_${h}.txt &
done
done

