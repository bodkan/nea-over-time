initialize() {
    initializeRecombinationRate(recomb_rate);
    initializeMutationRate(7e-9);

    // deleterious mutation types
    initializeMutationType("m1", 0.5, "g", -0.043, 0.23);
    initializeMutationType("m2", 0.1, "g", -0.043, 0.23);
    initializeMutationType("m3", 0.0, "g", -0.043, 0.23);

    // mutation type of neutral markers
    initializeMutationType("m0", 0.5, "f", 0.0);
    m0.convertToSubstitution = F;

    // define the proportions of different types of deleterious alleles
    initializeGenomicElementType("g1", c(m1, m2, m3), c(prop_add, prop_partrec, prop_rec));

    initializeGenomicElement(g1, 0, segment_length);

    // positions of the fixed Neanderthal neutral markers
    defineConstant("neutral_pos", seq(0, segment_length, neutral_spacing));
}

// create the population of AMH and Neanderthal ancestors
1 {
    sim.addSubpop("p1", 10000);
}

// split between AMH and Neanderthals after a period of burnin
50000 {
    sim.addSubpopSplit("p2", 1000, p1);
}

// dump all populations and mutations at the end of the simulation
67800 late() {
    // place neutral markers on all Neanderthal haplotypes
    for (pos in neutral_pos) {
        p2.genomes.addNewDrawnMutation(m0, pos);
    }

    sim.outputFull("simulations/dominance_mix__" + prop_add + "_" + prop_partrec +"_" + prop_rec + "__r_" + recomb_rate + ".txt");
    sim.simulationFinished();
}

1:67800 {
    if (sim.generation % 10000 == 1) {
       cat(time() + " :: INFO :: Simulation " + sim.generation + "/67800 generations\n");
    }
}