head(nea_muts)
slim_file[1]
head(mh_inds)
tail(mh_inds)
x[1]
length(x)
y <- str_split(x, " ", 2)
length(y)
str(y)
y <- str_split(x, " ", 3)
str(y)
str(x)
str(x)
s
x[1:5, 1:10]
str(x)
x
dim(x)
dim[1:6, 1:2]
x[1:6, 1:2]
x
?as_tibble
x
x
x$V3
str(x$V3)
x$V3[1, ]
x$V3[[1]]
x$V3
length(x$V3)
x$V3[1]
length(x$V3[1])
x$V3[1]
x
df <- tribble(
  ~x1,
  "a,b,c", 
  "d,e,f,g"
) 
df
df %>% 
  mutate(x2 = stringr::str_split(x1, ","))
df %>% 
  mutate(x2 = stringr::str_split(x1, ",")) %>% unnest
x
nrow(x)
x
x
select(x, V1)
select(x, V1=asd)
select(x, V1="asd")
select(x, "V1"="asd")
mtcars
mtcars2 <- select( mtcars, disp2 = disp )
mtcars2
mtcars2 <- select( mtcars, disp2 = disp )
x <-
    read_section_data(slim_file, "Genomes") %>%
    head %>%
    str_split(" ", 3, simplify=TRUE) %>%
    as_tibble
x
select(x, V2=asd)
x
x
x
read_genomes(slim_file, 
read_genomes
g <- read_genomes(slim_file)
g <- read_genomes(slim_file)
g <-    read_section_data(slim_file, "Genomes")
g[1]
p="p1"
.[which(!is.na(str_match(g, p)))]
g[which(!is.na(str_match(g, p)))]
read_genomes <- function(slim_file, p="") {
    read_section_data(slim_file, "Genomes") %>%  # read all lines with genomes
        .[which(!is.na(str_match(., p)))] %>%  # filter genomes in a given population
        str_split(" ", 3, simplify=TRUE) %>%  # split each row into three parts
  .... [TRUNCATED] 
g <- read_genomes(slim_file, "p1")
nrow(g)
ncol(g)
dim(g)
head(g)
g <- read_genomes(slim_file, "p1")
head(g)
g <- head(g)
g
g$mutations
mutate(g, mutations=as.integer(mutations))
mutate(g, mutations=as.integer(mutations[[1]]))
mutate(g, mutations=as.list(as.integer(mutations[[1]])))
str_c("a", "b")
x <- c("apple pie", "apple", "apple cake")
str_view(x, "apple")
nrow(nea_muts)
nea_muts
slim_file <- read_slim_file("simulations/exome_and_sites__h_0.5__seed_6977220333793.txt")
nea_muts <- read_mutations(slim_file, "m0", "p2")
mh_muts <- read_mutations(slim_file, "m0", "p1", t=50000
mh_inds <- read_individuals(slim_file, "p3")
slim_file[1]
nrow(nea_muts)
burnin <- 8 * 10000
hum_nea_split <- as.integer(500000/25)
hum_nea_split
burnin + hum_nea_split - as.integer(100000/25)
burnin + hum_nea_split - as.integer(55000/25)
install.packages("rmote", repos = c(CRAN = "http://cran.rstudio.com",
  tessera = "http://packages.tessera.io"))
library(rmote)
start_rmote()
 servr::daemon_stop("49877120")
start_rmote()
 servr::daemon_stop("52928528")
burnin + hum_nea_split - as.integer(100000/25)
